################################################################
## sensor.script
## Implements functions for interacting with the Robotiq FT 300 sensor
## The main entry points are ft_get() and ft_connect()
################################################################
FT_IPADDRESS = "127.0.0.1"
FT_PORT_CMD = 63350
FT_PORT_READ = 63351
FT_SOCKET_CMD = "ft_socket_cmd"
FT_SOCKET_READ = "ft_socket_read"
ft_last =[0,0,0,0,0,0]

# gets the last reading
def ft_get(critical_section_already_acquired = False):
    if critical_section_already_acquired:
        return ft_last
    end

    enter_critical 
    ft = ft_last
    exit_critical
    return ft
end

thread ft_read_fn():
    while True:
        r = socket_read_ascii_float(6,FT_SOCKET_READ)
        if r[0] == 6:
            enter_critical 
            ft_last = [r[1], r[2], r[3], r[4], r[5], r[6]]
            exit_critical
        end
    end
end

def ft_connect():
    socket_close(FT_SOCKET_CMD)
    socket_close(FT_SOCKET_READ)
    socket_open(FT_IPADDRESS,FT_PORT_CMD,FT_SOCKET_CMD)
    socket_open(FT_IPADDRESS,FT_PORT_READ,FT_SOCKET_READ)
    
    #socket_send_string("STREAM OFF",FT_SOCKET_CMD)
    socket_send_string("SET ZRO",FT_SOCKET_CMD)
    socket_send_string("STREAM ON",FT_SOCKET_CMD)
    r = socket_read_ascii_float(6,FT_SOCKET_READ)
    while r[0] != 6:
        r = socket_read_ascii_float(6,FT_SOCKET_READ)
    end
    ft_thread = run ft_read_fn()
    return ft_thread
end

def ft_disconnect(ft_thread):
    kill ft_thread
    socket_send_string("STREAM OFF",FT_SOCKET_CMD)
end

def ft_print_serial_number():
    socket_send_string("GET SNU",FT_SOCKET_CMD)
    string_from_server = socket_read_string(FT_SOCKET_CMD)
    popup(string_from_server)
end

def ft_print_firmware_version():
    socket_send_string("GET FWV",FT_SOCKET_CMD)
    string_from_server = socket_read_string(FT_SOCKET_CMD)
    popup(string_from_server)
end

def ft_print_prod_year():
    socket_send_string("GET PYE",FT_SOCKET_CMD)
    string_from_server = socket_read_string(FT_SOCKET_CMD)
    popup(string_from_server)
end

def ft_get_version():
    socket_send_string("GET VER",FT_SOCKET_CMD)
    string_from_server = socket_read_string(FT_SOCKET_CMD)
    popup(string_from_server)
end

def ft_save_calib_context():
    socket_send_string("CALIB NEXT TOOL",FT_SOCKET_CMD)
end

def ft_get_sensor_state():
    socket_send_string("CURRENT STATE",FT_SOCKET_CMD)
    state = socket_read_string(FT_SOCKET_CMD)
    textmsg("Current FT state: ", state)
    return state
end
